################################################################################
# General
################################################################################

# Specify the default shell.
set-option -g default-shell /bin/zsh

# Set the command used for new windows (if not specified when the
# window is created) to shell-command, which may be any sh(1)
# command.
set-option -g default-command /bin/zsh

# Set the time in milliseconds for which tmux waits after an escape is
# input to determine if it is part of a function or meta key sequences.
set-option -s escape-time 0

# Set the amount of time for which status line messages and other
# on-screen indicators are displayed. time is in milliseconds.
set-option -g display-time 3500
# Set the time in milliseconds for which the indicators shown by the display-panes command appear.
set-option -g display-panes-time 800

# Set the base index from which an unused index should be searched
# when a new window is created.
set-option -g base-index 1
# renumber windows when a window is closed
set-option -g renumber-windows on    

# Like base-index, but set the starting index for pane numbers.
set-option -g pane-base-index 1

# Set the maximum number of lines held in window history.
set-option -g history-limit 50000

# Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds
set-option -sg repeat-time 600

# When enabled, focus events are requested from the terminal if supported and passed through to 
# applications running in tmux
set-option -s focus-events on

################################################################################
# Key bindings
################################################################################

### Window & Pane Operation

# split-window:
#   Create a new pane by splitting target-pane: -h does a horizontal
#   split and -v a vertical split;
bind-key | split-window -h
bind-key - split-window -v

# break-pane:
#   Break src-pane off from its containing window to make it the only
#   pane in dst-window.
bind-key b break-pane

# kill-pane:
#   Destroy the given pane.  If no panes remain in the containing
#   window, it is also destroyed.
bind-key q kill-pane

# display-panes:
#   Display a visible indicator of each pane shown by target-client.
bind-key i display-panes

# resize-pane:
#   Resize a pane, up, down, left or right by adjustment with -U, -D,
#   -L or -R.  The adjustment is given in lines or cells (the default
#   is 1).
bind-key -r H resize-pane -L 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 1

# select-pane:
#   Make pane target-pane the active pane in window target-window, or
#   set its style (with -P).  If one of -D, -L, -R, or -U is used,
#   respectively the pane below, to the left, to the right, or above
#   the target pane is used.
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# swap-pane:
#   Swap two panes.
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

### Session Operation

# kill-session:
#   Destroy the given session, closing any windows linked to it and no
#   other sessions, and detaching all clients attached to it.
bind-key C-k kill-session

# switch-client:
#   Switch the current session for client target-client to
#   target-session.  If -l, -n or -p is used, the client is moved to
#   the last, next or previous session respectively.
bind-key N switch-client -n
bind-key P switch-client -p

### Other

# reload ~/.tmux.conf.
bind-key r source-file ~/.tmux.conf \; display "Reloaded $HOME/.tmux.conf"

# show online manual on new pane.
bind-key m command-prompt -p "Man:" "split-window 'man %%'"

# Set the key accepted as a prefix key.
set-option -g prefix C-t

# Unbind the command bound to key.
unbind-key C-b

# send-prefix:
#   Send the prefix key to a window as if it was pressed.
bind-key C-t send-prefix

################################################################################
# Appearance
################################################################################

# Set the position of the status line.
set-option -g status-position top

# Set the default terminal for new windows created in this session
set-option -g default-terminal "screen-256color"

### status line

# Set the maximum length of the left component of the status bar.
set-option -g status-left-length 90
# Set the maximum length of the right component of the status bar.
set-option -g status-right-length 90
# Display string (by default the session name) to the left of the
# status bar.  It may also contain the special character sequence #[]
# to change the colour or attributes, for example `#[fg=red,bright]'
# to set a bright red foreground.
set-option -g status-left 'tmux:[#P]'
# Display string to the right of the status bar.  By default, the
# current window title in double quotes, the date and the time are
# shown.
set-option -g status-right '#[fg=white]#(wifi)#[default] #(battery --tmux) [%Y-%m-%d(%a) %H:%M]'

# Update the status bar every interval seconds.
set-option -g status-interval 1

# Set the position of the window list component of the status line:
# left, centre or right justified.
set-option -g status-justify centre

# Monitor for activity in the window.  Windows with activity are
# highlighted in the status line.
set-option -g monitor-activity on
# If on, display a status line message when activity occurs in a
# window for which the monitor-activity window option is enabled.
set-option -g visual-activity off

# Control automatic window renaming
set-window-option -g automatic-rename on

# Attempt to set the client terminal title using the tsl and fsl terminfo(5) entries if they exist
set-option -g set-titles on

##### Colorscheme: Solarized

# Default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green

################################################################################
## Copy Mode
################################################################################

# Use vi or emacs-style key bindings in copy and choice modes.
set-option -g mode-keys emacs

# share clipboard from console.
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Set the pane border style for panes aside from the active pane.
set-option -g pane-border-style fg=green,fg=black

# Set the pane border style for the currently active pane.
set-option -g pane-active-border-style fg=white,bg=yellow

# Set status line message style.
set-option -g message-style fg=white,bright,bg=black

################################################################################
# plugins
################################################################################

### tpm (Tmux Plugin Manager) configuration

# prefix + I:       install plugins
# prefix + U:       update plugins
# prefix + alt + u: uninstall plugins

set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-cpu            \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-logging        \
  seebi/tmux-colors-solarized      \
'
# start tmux plugin manager.
run-shell '~/.tmux/plugins/tpm/tpm'

### tmux-resurrect: https://github.com/tmux-plugins/tmux-resurrect

#     Restore tmux environment after system restart.
#     tmux-resurrect saves all the little details from your tmux
#     environment so it can be completely restored after a system
#     restart (or when you feel like it). No configuration is
#     required. You should feel like you never quit tmux.

set-option -g @resurrect-save    'S'
set-option -g @resurrect-restore 'R'

### tmux-logging: https://github.com/tmux-plugins/tmux-logging

#     Enables logging of all output in the current pane.  After you
#     start logging, everything that's typed and all the output will
#     be saved to a file. Convenient for keeping track of your work.
#
#     Key binding: prefix + shift + p
set-option -g @pipe_pane_path '~/log'
